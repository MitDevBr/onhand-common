version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:latest
  working_directory: ~/project

jobs:
  init:
    <<: *defaults
    steps:
      - checkout
      - run: yarn global add lerna
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: lerna init
          command: yarn lerna:init
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/project
          paths: .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn build
      - persist_to_workspace:
          root: ~/project
          paths: .

  code-lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn lint

  markdown-lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn lint:markdown

  spell-check:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn check:spelling

  typecheck:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn typecheck

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn test

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: echo "registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN" > ~/.yarnrc
      - run: npm config set access public
      - run: yarn lerna:publish

workflows:
  build-and-publish:
    jobs:
      - init
      - build:
          requires:
            - init
      - code-lint:
          requires:
            - init
      - markdown-lint:
          requires:
            - init
      - spell-check:
          requires:
            - init
      - typecheck:
          requires:
            - init
            - build
      - test:
          requires:
            - build
            - code-lint
            - markdown-lint
            - spell-check
            - typecheck
      - publish:
          requires:
            - test
          filters:
            branches:
              only: master
